[
  {
    "ContainingType": "IdentityJwtWether.Controllers.SolarPowerPlantsController",
    "Method": "GetAll",
    "RelativePath": "api/SolarPowerPlants",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IdentityJwtWether.Data.Models.SolarPowerPlant, IdentityJwtWether, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.SolarPowerPlantsController",
    "Method": "Create",
    "RelativePath": "api/SolarPowerPlants",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "plantObject",
        "Type": "IdentityJwtWether.Controllers.SolarPowerPlantsController\u002BSolarPowerPlantObject",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IdentityJwtWether.Data.Models.SolarPowerPlant",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.SolarPowerPlantsController",
    "Method": "Get",
    "RelativePath": "api/SolarPowerPlants/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IdentityJwtWether.Data.Models.SolarPowerPlant",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.SolarPowerPlantsController",
    "Method": "Update",
    "RelativePath": "api/SolarPowerPlants/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "plantObject",
        "Type": "IdentityJwtWether.Controllers.SolarPowerPlantsController\u002BSolarPowerPlantObject",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IdentityJwtWether.Data.Models.SolarPowerPlant",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.SolarPowerPlantsController",
    "Method": "Delete",
    "RelativePath": "api/SolarPowerPlants/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.UserController",
    "Method": "Delete",
    "RelativePath": "api/User/Delete/{email}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/User/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "IdentityJwtWether.Controllers.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "api/User/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "IdentityJwtWether.Controllers.RegisterModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IdentityJwtWether.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IdentityJwtWether.WeatherForecast, IdentityJwtWether, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]